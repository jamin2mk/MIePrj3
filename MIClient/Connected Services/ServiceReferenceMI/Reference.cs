//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MIClient.ServiceReferenceMI {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="tb_admin", Namespace="http://schemas.datacontract.org/2004/07/MyImageService")]
    [System.SerializableAttribute()]
    public partial class tb_admin : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ad_idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ad_passwordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ad_usernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ad_id {
            get {
                return this.ad_idField;
            }
            set {
                if ((this.ad_idField.Equals(value) != true)) {
                    this.ad_idField = value;
                    this.RaisePropertyChanged("ad_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ad_password {
            get {
                return this.ad_passwordField;
            }
            set {
                if ((object.ReferenceEquals(this.ad_passwordField, value) != true)) {
                    this.ad_passwordField = value;
                    this.RaisePropertyChanged("ad_password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ad_username {
            get {
                return this.ad_usernameField;
            }
            set {
                if ((object.ReferenceEquals(this.ad_usernameField, value) != true)) {
                    this.ad_usernameField = value;
                    this.RaisePropertyChanged("ad_username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReferenceMI.IServiceMI")]
    public interface IServiceMI {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceMI/AdminLogin", ReplyAction="http://tempuri.org/IServiceMI/AdminLoginResponse")]
        bool AdminLogin(string uid, string pwd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceMI/AdminLogin", ReplyAction="http://tempuri.org/IServiceMI/AdminLoginResponse")]
        System.Threading.Tasks.Task<bool> AdminLoginAsync(string uid, string pwd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceMI/GetAdmins", ReplyAction="http://tempuri.org/IServiceMI/GetAdminsResponse")]
        MIClient.ServiceReferenceMI.tb_admin[] GetAdmins(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceMI/GetAdmins", ReplyAction="http://tempuri.org/IServiceMI/GetAdminsResponse")]
        System.Threading.Tasks.Task<MIClient.ServiceReferenceMI.tb_admin[]> GetAdminsAsync(string username);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceMIChannel : MIClient.ServiceReferenceMI.IServiceMI, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceMIClient : System.ServiceModel.ClientBase<MIClient.ServiceReferenceMI.IServiceMI>, MIClient.ServiceReferenceMI.IServiceMI {
        
        public ServiceMIClient() {
        }
        
        public ServiceMIClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceMIClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceMIClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceMIClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool AdminLogin(string uid, string pwd) {
            return base.Channel.AdminLogin(uid, pwd);
        }
        
        public System.Threading.Tasks.Task<bool> AdminLoginAsync(string uid, string pwd) {
            return base.Channel.AdminLoginAsync(uid, pwd);
        }
        
        public MIClient.ServiceReferenceMI.tb_admin[] GetAdmins(string username) {
            return base.Channel.GetAdmins(username);
        }
        
        public System.Threading.Tasks.Task<MIClient.ServiceReferenceMI.tb_admin[]> GetAdminsAsync(string username) {
            return base.Channel.GetAdminsAsync(username);
        }
    }
}
